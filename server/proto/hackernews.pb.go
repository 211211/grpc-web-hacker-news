// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/hackernews.proto

/*
Package grpc_web_hacker_news is a generated protocol buffer package.

It is generated from these files:
	proto/hackernews.proto
	proto/ping.proto

It has these top-level messages:
	ItemId
	Item
	ListStoriesResponse
	ListStoriesRequest
	GetStoryRequest
	GetStoryResponse
	PingRequest
	PingResponse
*/
package grpc_web_hacker_news

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ItemType int32

const (
	ItemType_UNKNOWN ItemType = 0
	ItemType_JOB     ItemType = 1
	ItemType_STORY   ItemType = 2
	ItemType_COMMENT ItemType = 3
	ItemType_POLL    ItemType = 4
	ItemType_POLLOPT ItemType = 5
)

var ItemType_name = map[int32]string{
	0: "UNKNOWN",
	1: "JOB",
	2: "STORY",
	3: "COMMENT",
	4: "POLL",
	5: "POLLOPT",
}
var ItemType_value = map[string]int32{
	"UNKNOWN": 0,
	"JOB":     1,
	"STORY":   2,
	"COMMENT": 3,
	"POLL":    4,
	"POLLOPT": 5,
}

func (x ItemType) String() string {
	return proto.EnumName(ItemType_name, int32(x))
}
func (ItemType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ItemId struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *ItemId) Reset()                    { *m = ItemId{} }
func (m *ItemId) String() string            { return proto.CompactTextString(m) }
func (*ItemId) ProtoMessage()               {}
func (*ItemId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ItemId) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Item struct {
	Id    *ItemId  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Score int32    `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	Title string   `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	By    string   `protobuf:"bytes,4,opt,name=by" json:"by,omitempty"`
	Time  int32    `protobuf:"varint,5,opt,name=time" json:"time,omitempty"`
	Url   string   `protobuf:"bytes,6,opt,name=url" json:"url,omitempty"`
	Type  ItemType `protobuf:"varint,7,opt,name=type,enum=grpc_web_hacker_news.ItemType" json:"type,omitempty"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Item) GetId() *ItemId {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Item) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *Item) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Item) GetBy() string {
	if m != nil {
		return m.By
	}
	return ""
}

func (m *Item) GetTime() int32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Item) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Item) GetType() ItemType {
	if m != nil {
		return m.Type
	}
	return ItemType_UNKNOWN
}

type ListStoriesResponse struct {
	Story *Item `protobuf:"bytes,1,opt,name=story" json:"story,omitempty"`
}

func (m *ListStoriesResponse) Reset()                    { *m = ListStoriesResponse{} }
func (m *ListStoriesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListStoriesResponse) ProtoMessage()               {}
func (*ListStoriesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ListStoriesResponse) GetStory() *Item {
	if m != nil {
		return m.Story
	}
	return nil
}

type ListStoriesRequest struct {
}

func (m *ListStoriesRequest) Reset()                    { *m = ListStoriesRequest{} }
func (m *ListStoriesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListStoriesRequest) ProtoMessage()               {}
func (*ListStoriesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type GetStoryRequest struct {
	Id *ItemId `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetStoryRequest) Reset()                    { *m = GetStoryRequest{} }
func (m *GetStoryRequest) String() string            { return proto.CompactTextString(m) }
func (*GetStoryRequest) ProtoMessage()               {}
func (*GetStoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetStoryRequest) GetId() *ItemId {
	if m != nil {
		return m.Id
	}
	return nil
}

type GetStoryResponse struct {
	Story *Item  `protobuf:"bytes,1,opt,name=story" json:"story,omitempty"`
	Html  []byte `protobuf:"bytes,2,opt,name=html,proto3" json:"html,omitempty"`
}

func (m *GetStoryResponse) Reset()                    { *m = GetStoryResponse{} }
func (m *GetStoryResponse) String() string            { return proto.CompactTextString(m) }
func (*GetStoryResponse) ProtoMessage()               {}
func (*GetStoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetStoryResponse) GetStory() *Item {
	if m != nil {
		return m.Story
	}
	return nil
}

func (m *GetStoryResponse) GetHtml() []byte {
	if m != nil {
		return m.Html
	}
	return nil
}

func init() {
	proto.RegisterType((*ItemId)(nil), "grpc_web_hacker_news.ItemId")
	proto.RegisterType((*Item)(nil), "grpc_web_hacker_news.Item")
	proto.RegisterType((*ListStoriesResponse)(nil), "grpc_web_hacker_news.ListStoriesResponse")
	proto.RegisterType((*ListStoriesRequest)(nil), "grpc_web_hacker_news.ListStoriesRequest")
	proto.RegisterType((*GetStoryRequest)(nil), "grpc_web_hacker_news.GetStoryRequest")
	proto.RegisterType((*GetStoryResponse)(nil), "grpc_web_hacker_news.GetStoryResponse")
	proto.RegisterEnum("grpc_web_hacker_news.ItemType", ItemType_name, ItemType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for HackerNewsService service

type HackerNewsServiceClient interface {
	ListStories(ctx context.Context, in *ListStoriesRequest, opts ...grpc.CallOption) (HackerNewsService_ListStoriesClient, error)
}

type hackerNewsServiceClient struct {
	cc *grpc.ClientConn
}

func NewHackerNewsServiceClient(cc *grpc.ClientConn) HackerNewsServiceClient {
	return &hackerNewsServiceClient{cc}
}

func (c *hackerNewsServiceClient) ListStories(ctx context.Context, in *ListStoriesRequest, opts ...grpc.CallOption) (HackerNewsService_ListStoriesClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_HackerNewsService_serviceDesc.Streams[0], c.cc, "/grpc_web_hacker_news.HackerNewsService/ListStories", opts...)
	if err != nil {
		return nil, err
	}
	x := &hackerNewsServiceListStoriesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HackerNewsService_ListStoriesClient interface {
	Recv() (*ListStoriesResponse, error)
	grpc.ClientStream
}

type hackerNewsServiceListStoriesClient struct {
	grpc.ClientStream
}

func (x *hackerNewsServiceListStoriesClient) Recv() (*ListStoriesResponse, error) {
	m := new(ListStoriesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for HackerNewsService service

type HackerNewsServiceServer interface {
	ListStories(*ListStoriesRequest, HackerNewsService_ListStoriesServer) error
}

func RegisterHackerNewsServiceServer(s *grpc.Server, srv HackerNewsServiceServer) {
	s.RegisterService(&_HackerNewsService_serviceDesc, srv)
}

func _HackerNewsService_ListStories_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListStoriesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HackerNewsServiceServer).ListStories(m, &hackerNewsServiceListStoriesServer{stream})
}

type HackerNewsService_ListStoriesServer interface {
	Send(*ListStoriesResponse) error
	grpc.ServerStream
}

type hackerNewsServiceListStoriesServer struct {
	grpc.ServerStream
}

func (x *hackerNewsServiceListStoriesServer) Send(m *ListStoriesResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _HackerNewsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc_web_hacker_news.HackerNewsService",
	HandlerType: (*HackerNewsServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListStories",
			Handler:       _HackerNewsService_ListStories_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/hackernews.proto",
}

func init() { proto.RegisterFile("proto/hackernews.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x6d, 0xcb, 0xd3, 0x40,
	0x10, 0x34, 0x6f, 0xed, 0xf3, 0x6c, 0xa5, 0x9e, 0x6b, 0x91, 0xa3, 0x88, 0x94, 0x7c, 0x8a, 0x22,
	0xb5, 0xc4, 0x1f, 0x20, 0x28, 0x52, 0xab, 0x6d, 0x52, 0xd2, 0x88, 0xfa, 0xa9, 0x98, 0x64, 0xb1,
	0xc1, 0xb6, 0x89, 0x77, 0x57, 0x4b, 0xfe, 0xa2, 0xbf, 0x4a, 0xee, 0x52, 0xdf, 0xb0, 0x05, 0xf5,
	0xdb, 0xdc, 0xcc, 0xec, 0xec, 0x66, 0x08, 0xdc, 0xad, 0x45, 0xa5, 0xaa, 0xc7, 0x9b, 0x0f, 0xf9,
	0x27, 0x12, 0x7b, 0x3a, 0xca, 0xb1, 0x21, 0x70, 0xf0, 0x51, 0xd4, 0xf9, 0xfa, 0x48, 0xd9, 0xba,
	0x95, 0xd6, 0x5a, 0xf3, 0x39, 0x74, 0x66, 0x8a, 0x76, 0xb3, 0x02, 0xfb, 0x60, 0x97, 0x05, 0xb7,
	0x46, 0x56, 0xe0, 0x25, 0x76, 0x59, 0xf8, 0x5f, 0x2d, 0x70, 0xb5, 0x84, 0x8f, 0x7e, 0x08, 0xbd,
	0xf0, 0xde, 0xf8, 0x5c, 0xca, 0xb8, 0x8d, 0xd0, 0x63, 0x38, 0x00, 0x4f, 0xe6, 0x95, 0x20, 0x6e,
	0x9b, 0xa4, 0xf6, 0xa1, 0x59, 0x55, 0xaa, 0x2d, 0x71, 0x67, 0x64, 0x05, 0xd7, 0x49, 0xfb, 0xd0,
	0x2b, 0xb3, 0x86, 0xbb, 0x86, 0xb2, 0xb3, 0x06, 0x11, 0x5c, 0x55, 0xee, 0x88, 0x7b, 0x66, 0xd4,
	0x60, 0x64, 0xe0, 0x1c, 0xc4, 0x96, 0x77, 0x8c, 0x49, 0x43, 0x0c, 0xc1, 0x55, 0x4d, 0x4d, 0xbc,
	0x3b, 0xb2, 0x82, 0x7e, 0x78, 0xff, 0xf2, 0x45, 0x69, 0x53, 0x53, 0x62, 0xbc, 0xfe, 0x14, 0xee,
	0xcc, 0x4b, 0xa9, 0x56, 0xaa, 0x12, 0x25, 0xc9, 0x84, 0x64, 0x5d, 0xed, 0x25, 0xe1, 0x04, 0x3c,
	0xa9, 0x2a, 0xd1, 0x9c, 0xbe, 0x6e, 0x78, 0x39, 0x2b, 0x69, 0x8d, 0xfe, 0x00, 0xf0, 0xb7, 0xa0,
	0xcf, 0x07, 0x92, 0xca, 0x7f, 0x0a, 0xb7, 0xa6, 0x64, 0xc8, 0xe6, 0x44, 0xfd, 0x5b, 0x6b, 0xfe,
	0x3b, 0x60, 0x3f, 0x03, 0xfe, 0xf7, 0x38, 0xdd, 0xdf, 0x46, 0xed, 0xb6, 0xa6, 0xfa, 0x9b, 0x89,
	0xc1, 0x0f, 0x63, 0xb8, 0xfa, 0xde, 0x05, 0xf6, 0xa0, 0xfb, 0x26, 0x7a, 0x1d, 0xc5, 0x6f, 0x23,
	0x76, 0x03, 0xbb, 0xe0, 0xbc, 0x8a, 0x9f, 0x31, 0x0b, 0xaf, 0xc1, 0x5b, 0xa5, 0x71, 0xf2, 0x9e,
	0xd9, 0xda, 0xf0, 0x3c, 0x5e, 0x2c, 0x5e, 0x44, 0x29, 0x73, 0xf0, 0x0a, 0xdc, 0x65, 0x3c, 0x9f,
	0x33, 0x57, 0xd3, 0x1a, 0xc5, 0xcb, 0x94, 0x79, 0x61, 0x03, 0xb7, 0x5f, 0x9a, 0xfd, 0x11, 0x1d,
	0xe5, 0x8a, 0xc4, 0x97, 0x32, 0x27, 0x2c, 0xa0, 0xf7, 0x4b, 0x2d, 0x18, 0x9c, 0xbf, 0xf5, 0xcf,
	0xe6, 0x86, 0x0f, 0xfe, 0xc2, 0xd9, 0xf6, 0x31, 0xb1, 0xb2, 0x8e, 0xf9, 0x93, 0x9f, 0x7c, 0x0b,
	0x00, 0x00, 0xff, 0xff, 0xbe, 0xf7, 0x6a, 0x39, 0xe3, 0x02, 0x00, 0x00,
}
